{"version":3,"sources":["Chart/Chart.js","img/Kava-logo.svg","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["MyChart","props","data","labels","addresses","datasets","label","amounts","fill","backgroundColor","borderColor","className","styles","chart","App","useState","setData","showData","setShowData","totalTransactions","length","countTransactions","medianTransaction","Math","floor","sortedTransactions","map","transaction","shares","sort","a","b","sortedData","largestTransaction","maxTransaction","maxInvestor","amount","i","delegator_address","findInvestor","averageTransaction","total","forEach","parseInt","sum","mappedSortedData","Card","info","Body","heading","src","logo","alt","Button","button","onClick","event","fetch","then","response","json","app_state","staking","delegations","Header","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iMAIe,SAASA,EAAQC,GAC5B,IAAMC,EAAO,CACTC,OAAO,YAAKF,EAAMG,WAClBC,SAAU,CACN,CACIC,MAAO,wBACPJ,KAAK,YAAKD,EAAMM,SAChBC,MAAM,EACNC,gBAAiB,uBACjBC,YAAa,wBAIzB,OACI,qBAAKC,UAAWC,IAAOC,MAAvB,SACI,cAAC,OAAD,CAAMX,KAAMA,M,oBCnBT,MAA0B,sCC0G1BY,MAlGf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNb,EADM,KACAc,EADA,OAEmBD,oBAAS,GAF5B,mBAENE,EAFM,KAEIC,EAFJ,KAaPC,EAkBN,SAA2BjB,GACzB,OAAOA,EAAKkB,OAnBYC,CAAkBnB,GACtCoB,EAsBGC,KAAKC,MAAML,EAAoB,EAAI,GArBtCM,EAwBN,SAAoBvB,GAIlB,OAHkBA,EAAKwB,KAAI,SAACC,GAC1B,OAAOA,EAAYC,UAEJC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KA5BXC,CAAW9B,GAChC+B,EA8BN,SAAwBD,GACtB,OAAOA,EAAWA,EAAWZ,OAAS,GA/Bbc,CAAeT,GACpCU,EAyCN,SAAsBjC,EAAMkC,GAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAInC,EAAKkB,OAAQiB,IAC/B,GAAInC,EAAKmC,GAAGT,QAAUQ,EACpB,OAAOlC,EAAKmC,GAAGC,kBA5CDC,CAAarC,EAAM+B,GACjCO,EAgCN,SAAatC,GACX,IAAIuC,EAAQ,EACOvC,EAAKwC,SAAQ,SAACf,GAC/Bc,GAASE,SAAShB,EAAYC,WAEhC,OAAOa,EArCkBG,CAAI1C,GAAQiB,EACjCf,EAAYF,EAAKwB,KAAI,SAACC,GAC1B,OAAOA,EAAYW,qBAGf/B,EAAUL,EAAKwB,KAAI,SAACC,GACxB,OAAOA,EAAYC,UAGfiB,EAAmBpB,EAAmBC,KAAI,SAACC,GAC/C,OAAOA,KAsCT,OACE,sBAAKhB,UAAWC,IAAOE,IAAvB,UACE,qBAAKH,UAAU,kCAAf,SACE,cAACmC,EAAA,EAAD,CAAMnC,UAAWC,IAAOmC,KAAxB,SACE,eAACD,EAAA,EAAKE,KAAN,WACE,oBAAIrC,UAAWC,IAAOqC,QAAtB,SAA+B,qBAAKC,IAAKC,EAAMC,IAAI,WACnD,cAACC,EAAA,EAAD,CAAQ1C,UAAWC,IAAO0C,OAAQC,QAlExB,SAACC,GACnBC,MAAM,mGACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACxD,GAAD,OAAUc,EAAQd,EAAK2D,UAAUC,QAAQC,gBAC9CL,KAAKxC,GAAY,KA8DZ,gCAILD,EACC,gCACE,qBAAKN,UAAU,kCAAf,SACE,eAACmC,EAAA,EAAD,CAAMnC,UAAWC,IAAOmC,KAAxB,UACE,cAACD,EAAA,EAAKkB,OAAN,mBACA,eAAClB,EAAA,EAAKE,KAAN,WACE,6CAAe,+BAAO7B,IAAtB,yBACA,uDAAyB,+BAAO0B,EAAiBvB,KAAjD,OACA,4EAA8C,+BAAOkB,OACrD,oEAAsC,+BAAOP,IAA0B,uBAAvE,oBAA8F,+BAAOE,eAI3G,qBAAKxB,UAAU,YAAf,SACE,cAACX,EAAD,CAASI,UAAWA,EAAWG,QAASA,SAG1C,SCzFK0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,uCChBAa,EAAOC,QAAU,CAAC,IAAM,iBAAiB,OAAS,oBAAoB,MAAQ,mBAAmB,QAAU,qBAAqB,KAAO,qB","file":"static/js/main.b8dd1b86.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from '../App.module.css';\nimport { Line } from \"react-chartjs-2\";\n\nexport default function MyChart(props) {\n    const data = {\n        labels: [...props.addresses],\n        datasets: [\n            {\n                label: \"Shares per delegation\",\n                data: [...props.amounts],\n                fill: true,\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"rgba(75,192,192,1)\"\n            },\n        ]\n    };\n    return (\n        <div className={styles.chart}>\n            <Line data={data} />\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/Kava-logo.9e44df28.svg\";","import styles from './App.module.css';\nimport React, { useState } from 'react'\nimport MyChart from './Chart/Chart'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport logo from './img/Kava-logo.svg'\n\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [showData, setShowData] = useState(false)\n\n\n\n  const displayData = (event) => {\n    fetch(\"https://ipfs.io/ipfs/QmbZiEejjAmdEmtF71WLPuY3dwkeMPCmcVxaj7N8aH56Zw/kava-4-export-20210122.json\")\n      .then((response) => response.json())\n      .then((data) => setData(data.app_state.staking.delegations))\n      .then(setShowData(true))\n  }\n\n  const totalTransactions = countTransactions(data)\n  const medianTransaction = median(data)\n  const sortedTransactions = sortedData(data)\n  const largestTransaction = maxTransaction(sortedTransactions)\n  const maxInvestor = findInvestor(data, largestTransaction)\n  const averageTransaction = sum(data) / totalTransactions\n  const addresses = data.map((transaction) => {\n    return transaction.delegator_address\n  })\n\n  const amounts = data.map((transaction) => {\n    return transaction.shares\n  })\n\n  const mappedSortedData = sortedTransactions.map((transaction) => {\n    return transaction\n  })\n\n  function countTransactions(data) {\n    return data.length\n  }\n\n  function median(data) {\n    return Math.floor(totalTransactions / 2 + 1)\n  }\n\n  function sortedData(data) {\n    const allShares = data.map((transaction) => {\n      return transaction.shares\n    })\n    return allShares.sort((a, b) => a - b)\n  }\n\n  function maxTransaction(sortedData) {\n    return sortedData[sortedData.length - 1]\n  }\n\n  function sum(data) {\n    let total = 0\n    const allAmounts = data.forEach((transaction) => {\n      total += parseInt(transaction.shares)\n    })\n    return total\n  }\n\n  function findInvestor(data, amount) {\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].shares == amount) {\n        return data[i].delegator_address\n      }\n    }\n  }\n\n  return (\n    <div className={styles.App}>\n      <div className=\"col-sm-10 col-md-6 mx-auto mt-5\">\n        <Card className={styles.info}>\n          <Card.Body>\n            <h1 className={styles.heading}><img src={logo} alt=\"logo\" /></h1>\n            <Button className={styles.button} onClick={displayData}>Render Data</Button>\n          </Card.Body>\n        </Card>\n      </div>\n      {showData ?\n        <div>\n          <div className=\"col-sm-10 col-md-6 mx-auto mt-5\">\n            <Card className={styles.info}>\n              <Card.Header>Data</Card.Header>\n              <Card.Body>\n                <div>There are <span>{totalTransactions}</span> total transactions</div>\n                <div>The median value is <span>{mappedSortedData[medianTransaction]}</span> </div>\n                <div>The average value of all transactions is <span>{averageTransaction}</span></div>\n                <div>The maximum transaction value is <span>{largestTransaction}</span><br /> and was made by <span>{maxInvestor}</span></div>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"col-sm-10\">\n            <MyChart addresses={addresses} amounts={amounts} />\n          </div>\n        </div>\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"button\":\"App_button__13pio\",\"chart\":\"App_chart__IfTIi\",\"heading\":\"App_heading__2nYdz\",\"info\":\"App_info__3tKmE\"};"],"sourceRoot":""}