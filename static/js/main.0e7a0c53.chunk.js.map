{"version":3,"sources":["img/Kava-logo.svg","Landing/Landing.js","Chart/Chart.js","Data/Data.js","LoadingSpinner/LoadingSpinner.js","App.js","reportWebVitals.js","index.js","Landing/Landing.module.css","Data/Data.module.css","App.module.css","Chart/Chart.module.css"],"names":["Landing","props","showData","className","Card","styles","info","Body","heading","src","logo","alt","Button","button","onClick","display","MyChart","data","labels","addresses","datasets","label","amounts","fill","backgroundColor","borderColor","chart","Data","setShowData","totalTransactions","length","countTransactions","medianTransaction","Math","floor","sortedTransactions","map","transaction","shares","sort","a","b","sortedData","largestTransaction","maxTransaction","maxInvestor","amount","i","delegator_address","findInvestor","averageTransaction","total","forEach","parseInt","sum","mappedSortedData","Header","LoadingSpinner","Spinner","animation","variant","role","App","useState","setData","loading","setLoading","event","axios","get","then","app_state","staking","delegations","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0e7a0c53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Kava-logo.9e44df28.svg\";","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport styles from './Landing.module.css';\nimport logo from '../img/Kava-logo.svg'\n\nfunction Landing(props) {\n    return (\n        <div>\n            {props.showData ?\n                null :\n                <div className=\"col-sm-10 col-md-6 mx-auto mt-5\">\n                    <Card className={styles.info}>\n                        <Card.Body>\n                            <h1 className={styles.heading}><img src={logo} alt=\"logo\" /></h1>\n                            <Button className={styles.button} onClick={props.display}>Render Data</Button>\n                        </Card.Body>\n                    </Card>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Landing","import React from \"react\";\nimport styles from './Chart.module.css';\nimport { Line } from \"react-chartjs-2\";\n\nexport default function MyChart(props) {\n    const data = {\n        labels: [...props.addresses],\n        datasets: [\n            {\n                label: \"Shares per delegation\",\n                data: [...props.amounts],\n                fill: true,\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"rgba(75,192,192,1)\"\n            },\n        ]\n    };\n    return (\n        <div className={styles.chart}>\n            <Line data={data} />\n        </div>\n    );\n}","import React from 'react'\nimport Chart from '../Chart/Chart'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport styles from './Data.module.css';\n\n\nfunction Data(props) {\n    const { data, setShowData } = props;\n\n    const totalTransactions = countTransactions(data)\n    const medianTransaction = median(data)\n    const sortedTransactions = sortedData(data)\n    const largestTransaction = maxTransaction(sortedTransactions)\n    const maxInvestor = findInvestor(data, largestTransaction)\n    const averageTransaction = sum(data) / totalTransactions\n    const addresses = data.map((transaction) => {\n        return transaction.delegator_address\n    })\n\n    const amounts = data.map((transaction) => {\n        return transaction.shares\n    })\n\n    const mappedSortedData = sortedTransactions.map((transaction) => {\n        return transaction\n    })\n\n    function countTransactions(data) {\n        return data.length\n    }\n\n    function median(data) {\n        return Math.floor(totalTransactions / 2 + 1)\n    }\n\n    function sortedData(data) {\n        const allShares = data.map((transaction) => {\n            return transaction.shares\n        })\n        return allShares.sort((a, b) => a - b)\n    }\n\n    function maxTransaction(sortedData) {\n        return sortedData[sortedData.length - 1]\n    }\n\n    function sum(data) {\n        let total = 0\n        data.forEach((transaction) => {\n            total += parseInt(transaction.shares)\n        })\n        return total\n    }\n\n    function findInvestor(data, amount) {\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].shares == amount) {\n                return data[i].delegator_address\n            }\n        }\n    }\n    return (\n        <div>\n            {props.showData ?\n                <>\n                    <div className=\"col-sm-10 col-md-6 mx-auto mt-5\">\n                        <Card className={styles.info}>\n                            <Card.Header>Data</Card.Header>\n                            <Card.Body>\n                                <div>There are <span>{totalTransactions}</span> total transactions</div>\n                                <div>The median value is <span>{mappedSortedData[medianTransaction]}</span> </div>\n                                <div>The average value of all transactions is <span>{averageTransaction}</span></div>\n                                <div>The maximum transaction value is <span>{largestTransaction}</span><br /> and was made by <span>{maxInvestor}</span></div>\n                                <Button className={styles.button} onClick={() => setShowData(false)}>Return to Homepage</Button>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"col-sm-10\">\n                        <Chart addresses={addresses} amounts={amounts} />\n                    </div>\n                </>\n                : null}\n        </div>\n    )\n}\n\nexport default Data","import React from 'react'\nimport { Spinner } from 'react-bootstrap';\n\nfunction LoadingSpinner() {\n    return (\n        <div>\n            <Spinner animation=\"border\" variant=\"primary\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div >\n    )\n}\n\nexport default LoadingSpinner","import styles from './App.module.css';\nimport axios from 'axios'\nimport React, { useState } from 'react'\nimport Landing from './Landing/Landing'\nimport Data from './Data/Data'\nimport LoadingSpinner from './LoadingSpinner/LoadingSpinner'\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [showData, setShowData] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n\n  const displayData = (event) => {\n    setLoading(true)\n    axios.get(\"https://ipfs.io/ipfs/QmbZiEejjAmdEmtF71WLPuY3dwkeMPCmcVxaj7N8aH56Zw/kava-4-export-20210122.json\")\n      .then(({ data }) => {\n        setData(data.app_state.staking.delegations)\n        setShowData(true)\n        setLoading(false)\n      })\n  }\n\n  return (\n    <div className={styles.App}>\n      <Landing display={displayData} showData={showData} />\n      {loading ?\n        <LoadingSpinner />\n        : null}\n      <Data setShowData={setShowData} showData={showData} data={data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Landing_button__hVONu\",\"heading\":\"Landing_heading__1zps4\",\"info\":\"Landing_info__MjA0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Data_button__1UfUq\",\"info\":\"Data_info__eJvYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__2_aSl\"};"],"sourceRoot":""}